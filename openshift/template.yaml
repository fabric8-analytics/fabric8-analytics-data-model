apiVersion: v1
kind: Template
labels:
  template: bayesian-data-importer
metadata:
  name: bayesian-data-importer
  annotations:
    description: bayesian-data-importer
objects:
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      service: bayesian-data-importer
    name: bayesian-data-importer
  spec:
    ports:
    - name: "9192"
      port: 9192
      protocol: TCP
      targetPort: 9192
    selector:
      service: bayesian-data-importer
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      service: bayesian-data-importer
    name: bayesian-data-importer
  spec:
    selector:
      service: bayesian-data-importer
    strategy:
      type: Rolling
      rollingParams:
        pre:
          failurePolicy: Retry
          execNewPod:
            containerName: bayesian-data-importer
            command: ["/populate_schema.py"]
    template:
      metadata:
        labels:
          service: bayesian-data-importer
      spec:
        containers:
        - env:
          - name: DATA_IMPORTER_SERVICE_PORT
            value: ${DATA_IMPORTER_SERVICE_PORT}
          - name: NUMBER_WORKER_PROCESS
            value: ${NUMBER_WORKER_PROCESS}
          - name: DATA_IMPORTER_SERVICE_TIMEOUT
            value: ${DATA_IMPORTER_SERVICE_TIMEOUT}
          - name: GREMLIN_USE_SECURE_CONNECTION
            value: ${GREMLIN_USE_SECURE_CONNECTION}
          - name: AWS_EPV_BUCKET
            valueFrom:
              configMapKeyRef:
                name: bayesian-config
                key: s3-bucket-for-analyses
          - name: AWS_PKG_BUCKET
            valueFrom:
              configMapKeyRef:
                name: bayesian-config
                key: s3-bucket-for-package-analyses
          - name: POSTGRESQL_DATABASE
            valueFrom:
              secretKeyRef:
                name: coreapi-postgres
                key: database
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                name: coreapi-postgres
                key: password
          - name: POSTGRESQL_USER
            valueFrom:
              secretKeyRef:
                name: coreapi-postgres
                key: username
          - name: AWS_S3_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: aws
                key: s3-access-key-id
          - name: AWS_S3_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: aws
                key: s3-secret-access-key
          - name: FLASK_LOGGING_LEVEL
            value: ${FLASK_LOGGING_LEVEL}
          - name: SKIP_SCHEMA
            value: "true"
          image: "${DOCKER_REGISTRY}/${DOCKER_IMAGE}:${IMAGE_TAG}"
          imagePullPolicy: Always
          name: bayesian-data-importer
          ports:
          - containerPort: 9192
            protocol: TCP
          resources:
            requests:
              cpu: ${CPU_REQUEST}
              memory: ${MEMORY_REQUEST}
            limits:
              cpu: ${CPU_LIMIT}
              memory: ${MEMORY_LIMIT}
          readinessProbe:
            httpGet:
              path: /api/v1/readiness
              port: 9192
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 60
            timeoutSeconds: 30
          livenessProbe:
            httpGet:
              path: /api/v1/liveness
              port: 9192
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 60
            timeoutSeconds: 30
        restartPolicy: Always
    test: false
    triggers:
    - type: ConfigChange
    replicas: ${{REPLICAS}}

parameters:
- description: Port number that data importer service will listen to
  name: DATA_IMPORTER_SERVICE_PORT
  required: true
  value: "9192"

- description: Timeout for the data importer service
  name: DATA_IMPORTER_SERVICE_TIMEOUT
  required: true
  value: "3600"

- description: Number of worker process for the data importer service
  name: NUMBER_WORKER_PROCESS
  required: true
  value: "2"

- description: Whether to use secure connection or not ?
  name: GREMLIN_USE_SECURE_CONNECTION
  required: false
  value: "false"

- description: MEMORY_LIMIT
  name: MEMORY_LIMIT
  required: true
  value: "512Mi"

- description: MEMORY_REQUEST
  name: MEMORY_REQUEST
  required: true
  value: "512Mi"

- description: CPU_LIMIT
  name: CPU_LIMIT
  required: true
  value: "300m"

- description: CPU_REQUEST
  name: CPU_REQUEST
  required: true
  value: "100m"

- description: Docker registry where the image is
  displayName: Docker registry
  required: true
  name: DOCKER_REGISTRY
  value: "registry.devshift.net"

- description: Docker image to use
  displayName: Docker image
  required: true
  name: DOCKER_IMAGE
  value: "bayesian/data-model-importer"

- description: Image tag
  displayName: Image tag
  required: true
  name: IMAGE_TAG
  value: "latest"  # image-tag

- description: Number of deployment replicas
  displayName: Number of deployment replicas
  required: true
  name: REPLICAS
  value: "1"

- description: "Flask logging level (see: https://docs.python.org/3/library/logging.html#levels)"
  displayName: Flask logging level
  required: false
  name: FLASK_LOGGING_LEVEL
  value: "INFO"
